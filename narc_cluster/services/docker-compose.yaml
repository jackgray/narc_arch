version: "3.9"
services:
  traefik:
    container_name: traefik
    image: traefik:v2.7
    networks:
      - reverse_proxy
    command: 
      # - bash -c "source .env"
      - "--api.insecure=true"
      - "--providers.docker=true"
      # - "--providers.docker.exposedbydefault=false"
      # - "--entrypoints.http.address=:80"
    ports:
      - "8000:80"
      - "8001:8080"
      - "8443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic_config.yaml:/etc/traefik/dynamic_config.yml:ro
      - ./certs/cert.crt:/etc/ssl/cert.crt
      - ./certs/cert.key:/etc/ssl/cert.key
    restart: always
    # environment:
    #   - TRAEFIK_API=true
    #   - TRAEFIK_API_DASHBOARD=true
    #   - TRAEFIK_API_INSECURE=true
    #   # - TRAEFIK_ENTRYPOINTS_HTTP=true
    #   # - TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS=:80
    #   # - TRAEFIK_GLOBAL_CHECKNEWVERSION=false
    #   # - TRAEFIK_GLOBAL_SENDANONYMOUSUSAGE=false
    #   - TRAEFIK_LOG=true
    #   # - TRAEFIK_LOG_LEVEL=INFO
    #   # - TRAEFIK_PROVIDERS_DOCKER=true
    #   # - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
    #   # - TRAEFIK_PROVIDERS_DOCKER_NETWORK=${COMPOSE_PROJECT_NAME:-narc-services}_proxy_net
    #   # - TRAEFIK_PROVIDERS_FILE_FILENAME=/etc/traefik/traefik.providers.file.toml
    #   # - TRAEFIK_PROVIDERS_FILE_WATCH=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse_proxy"
      # - "traefik.port=8080"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.narclab.com"

  whoami:
    image: containous/whoami
    container_name: whoami
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.entryPoints=web
      - traefik.http.routers.whoami.rule=Host(`whoami.narclab.com`)
      - traefik.http.routers.whoami.service=whoami-service
      - traefik.http.services.whoami-service.loadbalancer.server.port=80

      - traefik.http.routers.whoami-secure.entrypoints=web-secure
      - traefik.http.routers.whoami-secure.rule=Host(`whoami.narclab.com`)
      - traefik.http.services.whoami-secure.service=whoami-secure-service
      - traefik.http.services.whoami-secure-service.loadbalancer.server.port=80
      - traefik.http.routers.whoami-secure.tls=true

  # nginx:
  #   container_name: nginx
  #   image: nginx
  #   restart: always
  #   networks: 
  #     - reverse_proxy
  #   volumes:
  #     - nginx
  #   labels:
  #     - "traefik.enable=true"
  #     # HTTP
  #     - "traefik.http.routers.nginx.rule=(Host(`narclab.com`) && Path(`/vnc`)) || Host(`vnc.narclab.com`)"
  #     - "traefik.http.routers.nginx.entrypoints=web"
  # #     # Middleware
    
  remote_desktop:
    container_name: guac
    image: guacozy/guacozy-server
    restart: always
    ports: 
      - 8033:8080
      - 8003:80
      - 8444:443
    links:  
      - guacd:guacd
      - guac_db:guac_db
    depends_on:
      - guac_db
      - guacd
      - traefik
    volumes:
      - ./certs:/ssl
      - ./guacamole/ldap_config.py:/app/guacozy_server/ldap_config.py
    environment:
      - DJANGO_SECRET_KEY=abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
      - FIELD_ENCRYPTION_KEY=qjq4ObsXMqiqQyfKgD-jjEGm4ep8RaHKGRg4ohGCi1A=
      - DJANGO_DB_URL=postgres://postgres@guac_db:5432/postgres
      - DJANGO_ALLOWED_HOSTS=*
      - DEBUG=True   
    networks:
      - backend_network
      - reverse_proxy
    labels:
      - traefik.enable=true
      # - traefik.port=80
      # - traefik.frontend.rule=remote.narclab.com
      # HTTP
      - traefik.http.routers.guac.rule=(Host(`narclab.com`) && Path(`/remote`)) || Host(`remote.narclab.com`)"
      - traefik.http.routers.guac.entrypoints=web
      - traefik.http.routers.guac.service=guacBalancer
      - traefik.http.services.guacBalancer.loadbalancer.server.port=80
      # HTTPS
      - traefik.http.routers.guac-secure.rule=(Host(`narclab.com`) && Path(`/remote`)) || Host(`remote.narclab.com`)
      - traefik.http.routers.guac-secure.entrypoints=https
      - traefik.http.routers.guac-secure.service=guacBalancer-secure
      - traefik.http.services.guacBalancer-secure.loadbalancer.server.port=80

  guacd:
    container_name: guacd
    image: guacamole/guacd
    restart: always
    depends_on:
      - traefik
    networks:
      - backend_network

  guac_db:
    container_name: guac_db
    image: postgres:10.4-alpine
    restart: always
    # environment:
      # - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      # - MYSQL_USER=${MYSQL_USERNAME}
      # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # - MYSQL_DATABASE=guacamole
    volumes:
      # - "./guacamole:/docker-entrypoint-initdb.d"
      - guacdb:/var/lib/postgresql/data
    networks:
      - backend_network

  leantime: 
    container_name: leantime
    image: leantime/leantime:latest
    environment:
      - LEAN_DB_HOST=lean_db
      - LEAN_DB_USER=admin
      - LEAN_DB_PASSWORD=321.querty
      - LEAN_DB_DATABASE=leantime
      - LEAN_APP_URL=projects.narclab.com
    networks:
      - reverse_proxy
    depends_on:
      - lean_db
      - traefik
    labels:
      - "traefik.enable=true"
      # HTTP
      - "traefik.http.routers.leantime1.rule=(Host(`narclab.com`) && Path(`/projects`)) || Host(`projects.narclab.com`)"
      - "traefik.http.routers.leantime1.entrypoints=web"
      - "traefik.http.routers.leantime1.service=leanBalance1"
      - "traefik.http.services.leanBalance1.loadbalancer.server.port=80"
      
      - "traefik.http.routers.leantime2.rule=(Host(`narclab.com`) && Path(`/projects`)) || Host(`projects.narclab.com`)"
      - "traefik.http.routers.leantime2.entrypoints=leantime"
      - "traefik.http.routers.leantime2.service=leanBalance2"
      - "traefik.http.services.leanBalance2.loadbalancer.server.port=9000"
    # volumes:
    #   - ./leantime/configuration.php

  lean_db:
    container_name: lean_db
    image: mysql:5.7
    restart: always
    depends_on:
      - traefik
    environment:
      - MYSQL_ROOT_PASSWORD=321.qwerty
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=321.qwerty
      - MYSQL_DATABASE=leantime 
    # command: --character-set-server=utf8 --collation-server=utf8_unicode_ci
    volumes:
      # - ./leantime/schema.sql:/var/lib/mysql/schema.sql:ro
      # ./leantime:/config
      - leandb:/var/lib/mysql
      # - lean_mariadb:/var/lib/mysql
    networks:
      - backend_network

  arango:
    container_name: arangodb
    image: arangodb/arangodb:3.9.1
    restart: always
    depends_on: 
      - traefik
    networks:
      - reverse_proxy   # make accessible by HTTP
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps_data:/var/lib/arangodb3-apps
    environment:
      - ARANGO_ROOT_PASSWORD=defaultpassword
    # ports:
    #   - 8529:8529
    labels:
      - "traefik.enable=true"
      # HTTP
      - "traefik.http.routers.arango.rule=(Host(`narclab.com`) && Path(`/data`)) || Host(`data.narclab.com`)"
      - "traefik.http.routers.arango.entrypoints=web"
      # Middleware
      # - "traefik.http.middlewares.arango.headers.stsincludesubdomains=true"
      # - "traefik.http.middlewares.arango.headers.stsseconds=315360000"
      # - "traefik.http.middlewares.arango_headers.headers.forcestsheader=true"
      # # Service
      # - "traefik.http.services.guac.loadbalancer.server.port=8085"


  
networks:
  reverse_proxy:
    external: true
  backend_network:
    external: true
  guac_network:
    external: true
  leantime_network:
    external: true

volumes:
  arangodb_data:
  arangodb_apps_data:
  leandb: {}
  lean_mariadb: {}
  guacdb: {}
  ssl: